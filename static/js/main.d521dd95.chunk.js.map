{"version":3,"sources":["Chat/Message/Message.tsx","Chat/MessageInput/MessageInput.tsx","Chat/Chat.tsx","SignIn/SignIn.tsx","ConnectedUsers/ConnectedUsers.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","paper","padding","message","color","timelineOppositeContent","flex","display","mine","backgroundColor","MessageO","username","hour","Date","getTime","sent","read","this","Message","myUsername","classes","TimelineItem","TimelineOppositeContent","className","TimelineSeparator","TimelineDot","Avatar","slice","toUpperCase","TimelineConnector","TimelineContent","Paper","elevation","Typography","variant","component","toLocaleDateString","toLocaleTimeString","minute","Divider","textField","width","iconButton","border","height","marginLeft","MessageInput","sendMessage","socket","useState","handleChange","writting","handleWritting","writter","handleWritter","useEffect","on","usr","off","setTimeout","style","alignItems","onSubmit","e","preventDefault","TextField","id","rowsMax","value","onChange","event","target","emit","type","IconButton","Chat","userName","messages","setMessages","msg","messagesEndRef","useRef","current","scrollIntoView","behavior","scrollToBottom","overflowY","margin","Timeline","align","map","ref","root","title","fontSize","pos","marginBottom","button","marginTop","SignIn","setUserName","setUserName2","userNameError","setError","console","log","Card","position","top","left","CardContent","Grid","container","direction","justify","placeholder","Button","minWidth","bullet","transform","ConnectedUsers","onShowUsers","onHideUsers","users","right","zIndex","onMouseEnter","onMouseLeave","user","index","textAlign","io","process","App","showUsers","setShowUsers","setUsers","Container","maxWidth","SupervisedUserCircle","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d521dd95.chunk.js","sourcesContent":["import TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Divider } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: \"6px 16px\"\n  },\n  message: {\n    color: 'green'\n  },\n  timelineOppositeContent: {\n    flex: 0,\n    display: 'none'\n  },\n  mine: {\n    backgroundColor: 'rgba(0, 0, 0, 0.2)'\n  }\n}));\n\nexport interface MessageO {\n  username: string;\n  hour: number;\n  message: string;\n  sent: boolean;\n  read: boolean;\n  myUsername: string;\n}\n\nexport class MessageO {\n  username: string = \"\";\n  hour: number = new Date().getTime();\n  message: string = \"\";\n  sent: boolean = false;\n  read: boolean = false;\n\n  constructor(username: string, message: string) {\n    this.username = username;\n    this.message = message;\n  }\n}\n\nexport default function Message({ username, hour, message, sent, read, myUsername }: MessageO) {\n  const classes = useStyles();\n  return (\n    <TimelineItem>\n      <TimelineOppositeContent className={classes.timelineOppositeContent}>\n      </TimelineOppositeContent>\n      <TimelineSeparator>\n        <TimelineDot>\n          <Avatar>{username.slice(0, 2).toUpperCase()}</Avatar>\n        </TimelineDot>\n        <TimelineConnector />\n      </TimelineSeparator>\n      <TimelineContent >\n        <Paper elevation={3} className={`${classes.paper} ${username !== myUsername ? classes.mine : ''}`}>\n          <Typography variant=\"subtitle1\" component=\"p\">\n            {username}\n          </Typography>\n          <Typography variant=\"body2\">\n            {`${new Date(hour).toLocaleDateString('es-ES')} - ${new Date(hour).toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' })}`}\n          </Typography>\n          <Divider />\n          <Typography>{message}</Typography>\n        </Paper>\n      </TimelineContent>\n    </TimelineItem>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Send from '@material-ui/icons/Send'\nimport Typography from \"@material-ui/core/Typography\";\nimport { Socket } from 'socket.io-client';\n\ninterface IMessageInputProps {\n  sendMessage(message: string): void,\n  socket: Socket,\n  username: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: '100%',\n  },\n  iconButton: {\n    border: '6px solid rgba(0,0,0,0.5)',\n    width: '50px',\n    height: '50px',\n    marginLeft: '10px'\n  }\n}));\n\nexport default function MessageInput({ sendMessage, socket, username }: IMessageInputProps) {\n  const classes = useStyles();\n\n  const [textField, handleChange] = useState('')\n  const [writting, handleWritting] = useState(false)\n  const [writter, handleWritter] = useState('')\n  useEffect(() => {\n    socket.on('writting', (usr: string) => {\n      handleWritting(true)\n      handleWritter(usr)\n    })\n    return () => {\n      socket.off('writting')\n      setTimeout(() => {\n        handleWritting(false)\n      }, 1000);\n    }\n  }, [writting, socket])\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    handleChange(event.target.value)\n    setTimeout(() => {\n      socket.emit('writting', username)\n    }, 500);\n  }\n\n  return (\n    <div style={{ padding: '10px 20px' }}>\n      {writting\n        ?\n        <Typography variant=\"subtitle2\" component=\"p\">\n          {writter} is writting...\n        </Typography>\n        :\n        <Typography style={{ color: 'white' }} variant=\"subtitle2\" component=\"p\">\n          .\n        </Typography>\n\n      }\n      <form\n        style={{ display: 'flex', alignItems: 'center' }}\n        onSubmit={(e) => {\n          e.preventDefault()\n          sendMessage(textField);\n          handleChange('')\n        }}>\n        <TextField\n          className={classes.textField}\n          id=\"outlined-multiline-flexible\"\n          rowsMax={2}\n          value={textField}\n          onChange={onChange}\n          variant=\"outlined\"\n          type=\"text\"\n        />\n        <IconButton\n          className={classes.iconButton}\n          type=\"submit\"\n        >\n          <Send />\n        </IconButton>\n      </form>\n    </div>\n  )\n}\n","import Timeline from \"@material-ui/lab/Timeline\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Message, { MessageO } from \"./Message/Message\";\nimport MessageInput from './MessageInput/MessageInput';\nimport { Socket } from 'socket.io-client';\n\ninterface IChatProps {\n  socket: Socket,\n  userName: string\n}\n\nexport default function Chat({ socket, userName }: IChatProps) {\n  const [messages, setMessages] = useState<MessageO[]>([])\n\n  useEffect(() => {\n    socket.on('chat message', (msg: MessageO) => {\n      setMessages([...messages, msg])\n    })\n    return () => {\n      socket.off('chat message')\n    }\n  }, [messages, socket])\n\n  const sendMessage = (msg: string): void => {\n    if (msg) {\n      const message = new MessageO(userName, msg)\n      setMessages([...messages, message])\n      socket.emit('chat message', message)\n    }\n  }\n\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages]);\n\n  return (\n    <div>\n      <div style={{ height: '90vh', overflowY: 'scroll', padding: 0, margin: 0 }}>\n        <Timeline align=\"left\">\n          {messages.map(message =>\n            <Message\n              key={message.hour}\n              hour={message.hour}\n              message={message.message}\n              read={message.read}\n              sent={message.sent}\n              username={message.username}\n              myUsername = {userName}\n            />)}\n        </Timeline>\n        <div ref={messagesEndRef} />\n      </div >\n      <MessageInput sendMessage={sendMessage} socket={socket} username={userName}/>\n    </div>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Socket } from 'socket.io-client';\nimport { Grid, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 'fit-content'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  textField: {\n    width: '100%',\n  },\n  button: {\n    marginTop: '10px'\n  }\n});\n\ninterface ISignInProps {\n  socket: Socket,\n  setUserName(usr: string): void\n}\n\nexport default function SignIn({ socket, setUserName }: ISignInProps) {\n  const classes = useStyles();\n  const [userName, setUserName2] = useState('')\n  const [userNameError, setError] = useState(false)\n  useEffect(() => {\n    socket.on('signin', (usr: string) => {\n      if (usr === '') {\n        setError(true)\n      }\n      console.log(usr)\n      setUserName(usr)\n    })\n    return () => {\n      socket.off('signin')\n    }\n  }, [socket, userName, setUserName])\n\n  const submitUsername = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    if (userName) {\n      socket.emit('signin', userName)\n    }\n  }\n\n  return (\n    <Card className={classes.root} style={{ position: 'absolute', top: '40vh', left: '42vw' }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Welcome to myChat\n        </Typography>\n        {\n          userNameError\n            ?\n            <Typography className={classes.pos} style={{ color: 'red' }}>\n              This username isn't available\n            </Typography>\n            :\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Just enter a username\n            </Typography>\n\n        }\n        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\">\n          <form onSubmit={submitUsername}>\n            <TextField\n              className={classes.textField}\n              id=\"outlined-multiline-flexible\"\n              value={userName}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setUserName2(e.target.value)}\n              variant=\"outlined\"\n              placeholder=\"Your username\"\n              type=\"text\"\n            />\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >SignIn</Button>\n          </form>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core'\nimport { Socket } from 'socket.io-client';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\ninterface IConnectedUsers {\n  onShowUsers(): void;\n  onHideUsers(): void;\n  socket: Socket;\n  users: string[]\n}\n\nexport default function ConnectedUsers({ onShowUsers, onHideUsers, socket, users }: IConnectedUsers) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={{ position: 'absolute', right: '5px', top: '95px', zIndex: 1, backgroundColor: 'white' }}\n      onMouseEnter={onShowUsers}\n      onMouseLeave={onHideUsers}\n    >\n\n      <Card style={{ backgroundColor: 'white', width: 'fit-content' }} className={classes.root} elevation={10}>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">\n            Connected Users\n        </Typography>\n          {\n            users.map((user, index) =>\n              <div key={index}>\n                <Typography style={{ textAlign: 'center' }} variant=\"body2\" component=\"p\">\n                  {user}\n                </Typography>\n                <Divider />\n              </div>\n            )\n          }\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n","import './App.css';\nimport Chat from './Chat/Chat';\nimport Container from '@material-ui/core/Container';\nimport { io, Socket } from 'socket.io-client';\nimport SignIn from './SignIn/SignIn';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { SupervisedUserCircle } from '@material-ui/icons'\nimport ConnectedUsers from './ConnectedUsers/ConnectedUsers';\n\n\nconst socket: Socket = io(process.env.REACT_APP_SERVER_URL + '');\n\nfunction App() {\n  const [userName, setUserName] = useState('')\n  const [showUsers, setShowUsers] = useState(false)\n  const [users, setUsers] = useState<string[]>([])\n\n  useEffect(() => {\n    socket.on('connected users', (users: string[]) => {\n      console.log(users)\n      setUsers(users)\n    })\n    return () => {\n      socket.off('connected users')\n    }\n  }, [users])\n\n  const onShowUsers = () => {\n    setShowUsers(true)\n  }\n\n  const onHideUsers = () => {\n    setShowUsers(false)\n  }\n\n  return (\n    <Container maxWidth=\"xl\" >\n      <div style={{ width: 'fit-content', position: 'absolute', zIndex: 1, right: '5px' }} onMouseEnter={onShowUsers} onMouseLeave={onHideUsers}>\n        <SupervisedUserCircle style={{ width: '100px', height: '100px' }} />\n      </div>\n      {\n        showUsers\n          ?\n          <ConnectedUsers onShowUsers={onShowUsers} onHideUsers={onHideUsers} socket={socket} users={users} />\n          :\n          ''\n      }\n      {\n        !userName.length\n          ?\n          <SignIn socket={socket} setUserName={setUserName}></SignIn>\n          :\n          <Chat socket={socket} userName={userName} />\n      }\n    </Container>\n  );\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}